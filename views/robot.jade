doctype 5

html
  head
    title Robot View
    script(type='text/javascript', src='/socket.io/socket.io.js')

    style(type='text/css')
      body {
        padding: 30px 50px;
      }

      #t {
        display: block;
        margin-bottom: 15px;
        outline: none;
        width: 750px;
        height: 100px;
      }

      #creatRobot {
        width: 150px;
      }

      #controlRobot {
        width: 300px;
      }

  body
    h1 Robot Development Exercise
    h1 Author : Sachin Mohite
    br
    br
    h2 Robot View

    br
    p='This console renders the changing Positions of Robot'
    <canvas id="myCanvas" width="700" height="300" style="border:1px solid #000000;"></canvas>
 
    h2 Instructions:
    1. First create Robot Control Session on http://nodejsserver.cloudapp.net:3000/?controller=true.
    br
    2. Only AirBorneVehichle vehichles will be able to move on Z Axis.
    br
    3. Direction values are numeric from the programming perspective. <b>1=North, 2=East, 3=South, 4=West</b>.
    br

    h2 Other Details:
    1. I have also implemented getPosition() and getDirection() methods which are not demonstrated here.
    br
    2. I have hosted this demonstration on the <b>Azure Instance</b>.
    br
    3. Client Side is developed in JADE. I was just trying it for my own sake, as UI is less important here.
    br
    4. This UI is not tested on different Browsers. I tested it on Crome. There is possibility of misbehavior on others.
    br
    5. Controllers can connect on http://nodejsserver.cloudapp.net:3000/?controller=true and Robots can connect on http://nodejsserver.cloudapp.net:3000/?controller=false.


    script(type='text/javascript')
      var socket = io.connect();
      var jsonData;

      var canvas = document.getElementById('myCanvas');
      var context = canvas.getContext('2d');
      var rectColor;

      //On Socket: session
      socket.on('session', function (session) {
            //jsonData = JSON.stringify(session);
      });

      //On Socket: creatRobot
      socket.on('creatRobot', function (objRobot) {

                  var str='Position:('+objRobot.x+','+objRobot.y+','+objRobot.z+') Direction:'+objRobot.dir;

                  context.clearRect ( 0 , 0, canvas.width , canvas.height );

                  if(objRobot.type=="GroundVehicle")
                        rectColor = "#FF0000"
                  else
                        rectColor = "#00FF00"

                  context.fillStyle=rectColor;
                  context.fillRect(0,canvas.height-0-20,20,20);
                  context.fillText(str, 0,canvas.height-0-20);
 
      });//socket.on('creatRobot', function (value) {

      //On Socket: deleteRobot
      socket.on('deleteRobot', function (objRobot) {

                  var str='Controller not yet ready..';

                  context.clearRect ( 0 , 0, canvas.width , canvas.height );
                  context.fillStyle=rectColor;
                  context.fillRect(0,canvas.height-0-20,20,20);
                  context.fillText(str, 0,canvas.height-0-20);
  
      });//socket.on('creatRobot', function (value) {

      //On Socket: updateRobot
      socket.on('updateRobot', function (objRobot) {
            var str='Position:('+objRobot.x+','+objRobot.y+','+objRobot.z+') Direction:'+objRobot.dir;

            context.clearRect ( 0 , 0, canvas.width , canvas.height );
            context.fillStyle=rectColor;
            context.fillText(str, objRobot.x*20, canvas.height-objRobot.y*30-20);
            context.fillRect(objRobot.x*20,canvas.height-objRobot.y*30-20,20,20);
       });//socket.on('creatRobot', function (value) {
      
